# ===============================================
# CONFIGURACIÓN DEL SERVIDOR
# ===============================================
# Puerto en el que se ejecutará la aplicación. 8080 es el estándar.
server.port=8080

# ===============================================
# NOMBRE DE LA APLICACIÓN
# ===============================================
spring.application.name=ProyectoJS

# ===============================================
# CONFIGURACIÓN DE LA BASE DE DATOS (DataSource)
# ===============================================
# La URL de conexión para tu base de datos en XAMPP.
# Apunta a tu máquina local (localhost), al puerto 3306, y a la base de datos "libros_como_alas".
# El parámetro `createDatabaseIfNotExist=true` es una salvaguarda útil.
spring.datasource.url=jdbc:mysql://localhost:3306/libros_como_alas?createDatabaseIfNotExist=true

# Usuario de la base de datos. En XAMPP, el usuario por defecto es "root".
spring.datasource.username=root

# Contraseña de la base de datos. En XAMPP, por defecto no hay contraseña, así que se deja en blanco.
spring.datasource.password=

# El driver que usa Spring para comunicarse con MySQL/MariaDB.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===============================================
# CONFIGURACIÓN DE JPA / HIBERNATE
# ===============================================
# El "dialecto" que Hibernate (la implementación de JPA) usará para generar el SQL correcto.
# MySQLDialect es compatible con MariaDB en XAMPP.
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Esta es la configuración más importante para el desarrollo:
# "update": Cada vez que inicies la aplicación, Hibernate comparará tus clases @Entity
# con las tablas de la base de datos. Si falta una columna o una tabla, la creará.
# ¡Cuidado! En producción se suele usar "validate" o "none".
spring.jpa.hibernate.ddl-auto=update

# Muestra en la consola las consultas SQL que Hibernate está ejecutando.
# Es extremadamente útil para depurar y entender qué está pasando.
spring.jpa.show-sql=true

# Formatea el SQL mostrado en la consola para que sea más legible.
spring.jpa.properties.hibernate.format_sql=true